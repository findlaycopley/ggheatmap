library(devtools)
library(roxygen2)
devtools::install()
test()
load_all()
test()
load_all()
test()
load_all()
y
test(y)
load_all()
test(y)
test(y)
load_all()
test(y)
load_all()
test(y)
load_all()
test(y)
load_all()
test(y)
test(y)
load_all()
test(y)
load_all()
test(y)
load_all()
test(y)
test <- function(y) {
z <- heatmapClass(RawData = y)
print("Scale data frame")
z <- scaleMatrix(z)
print("Row Dendro")
z <- generateRowDendro(z)
print("Col Dendro")
z <- generateColDendro(z)
print("plot Dendro")
z <- plotDendro(z)
print("plotHeatmap")
z <- plotHeatmap(z)
print("Plot All")
(plot_spacer() +
z@Plot$Col_dend +
z@Plot$Row_dend +
z@Plot$Heatmap +
plot_layout(heights=c(1,5),
widths=c(1,5),
nrow=2)) /
guide_area() + plot_layout(heights = c(5,1), guides = "collect") &
theme(plot.margin = unit(rep(0.01,4),"mm"))
z
}
test(y)
test(y)
load_all()
d <- test(y)
d@Information
matrix(c(1,2,3,5,
5,6,3,2,
1,4,3,6), nrow=3)
d@ProcessedData[3,c(2,4)]
load_all()
d <- test(y)
d@PlotData$Heatmap
d@Plot$Heatmap
d@PlotData$Hclust_Row
load_all()
d <- test(y)
d@PlotData$Row_dend
d@PlotData$Col_dend
d@Plot$Heatmap
d@Plot$Row_dend
d@Plot$Col_dend
load_all()
test(y)
load_all()
test(y)
d@PlotData[["Row_dend"]]
if (d@PlotData[["Row_dend"]]) {print{"yes"}}
if (d@PlotData[["Row_dend"]]) {print("yes")})
if (d@PlotData$Row_dend) {print("yes")})
if (exists(d@PlotData$Row_dend)) {print("yes")})
exists(d@PlotData$Row_dend))
exists(d@PlotData$Row_dend)
exists("d@PlotData$Row_dend")
d@PlotData$Row_dend
("Row_dend" %in% d@PlotData)
("Row_dend" %in% d@PlotData)
("Row_dend" %in% names(d@PlotData))
load_all()
test(y)
test <- function(y) {
z <- heatmapClass(RawData = y)
print("Scale data frame")
z <- scaleMatrix(z)
print("Row Dendro")
z <- generateRowDendro(z)
print("Col Dendro")
z <- generateColDendro(z)
print("plot Dendro")
z <- plotDendro(z)
print("plotHeatmap")
z <- plotHeatmap(z)
print("Plot All")
print((plot_spacer() +
z@Plot$Col_dend +
z@Plot$Row_dend +
z@Plot$Heatmap +
plot_layout(heights=c(1,5),
widths=c(1,5),
nrow=2)) /
guide_area() + plot_layout(heights = c(5,1), guides = "collect") &
theme(plot.margin = unit(rep(0.01,4),"mm")))
}
test(y)
test(y)
test <- function(y) {
z <- heatmapClass(RawData = y)
print("Scale data frame")
z <- scaleMatrix(z)
print("Row Dendro")
z <- generateRowDendro(z)
print("Col Dendro")
z <- generateColDendro(z)
print("plot Dendro")
z <- plotDendro(z)
print("plotHeatmap")
z <- plotHeatmap(z)
print("Plot All")
print((plot_spacer() +
z@Plot$Col_dend +
z@Plot$Row_dend +
z@Plot$Heatmap +
plot_layout(heights=c(1,5),
widths=c(1,5),
nrow=2)) &
theme(plot.margin = unit(rep(0.01,4),"mm")))
}
test(y)
d <- test(y)
d
load_all()
d <- test(y)
d
test <- function(y) {
z <- heatmapClass(RawData = y)
print("Scale data frame")
z <- scaleMatrix(z)
print("Row Dendro")
z <- generateRowDendro(z)
print("Col Dendro")
z <- generateColDendro(z)
print("plot Dendro")
z <- plotDendro(z)
print("plotHeatmap")
z <- plotHeatmap(z)
print("Plot All")
print((plot_spacer() +
z@Plot$Col_dend +
z@Plot$Row_dend +
z@Plot$Heatmap +
plot_layout(heights=c(1,5),
widths=c(1,5),
nrow=2)) &
theme(plot.margin = unit(rep(0.01,4),"mm")))
z
}
d <- test(y)
d
library(devtools)
library(roxygen2)
load_all()
load_all()
library(devtools)
library(roxygen2)
load_all()
y
test(y)
load_all()
test
test(y)
load_all()
test(y)
load_all()
test(y)
d <- test(y)
d@Plot$Allprint
"Row_dend" %in% heatmapClass@PlotData
"Row_dend" %in% d@PlotData
d@PlotData
load_all()
d <- test(y)
d@Plot$Allprint
d@Plot$PlotData
d@PlotData
"Hclust_Col" %in% d@PlotData
d@ProcessedData
"Hclust_Col" %in% d@PlotData
d@PlotData
exists(d@PlotData$Hclust_Col)
d@PlotData$Hclust_Col
"Hclust_Col" %in% names(d@PlotData)
load_all()
"Hclust_Col" %in% names(d@PlotData)
load_all()
d <- test(y)
d
## row Dendro and heatampz@Plot$Row_dend + z@Plot$Heatmap +
## setlayout
plot_layout(heights=c(1,5),
widths=c(1,5),
nrow=2)) &
## remove padding
theme(plot.margin = unit(rep(0.01,4),"mm")))
load_all()
d <- test(y)
load_all()
d <- test(y)
load_all()
d <- test(y)
load_all()
d <- test(y)
d@Plot$All
d@Information$rowDendro
d@Information$rowDendro = FALSE
buildHeatmap(d)
if (d@Information$rowDendro)
{print("hi")}
if (d@Information$rowDendro) {print("hi")}
d
buildHeatmap(d)
load_all()
buildHeatmap(d)
load_all()
d <- test(y)
d@Information
d
load_all()
d <- test(y)
d@Information$rowDendro = FALSE
buildHeatmap(d)
z <- buildHeatmap(d)
z@Plot$Heatmap
## Space and column Dendro
heatmapClass@Plots$Combo <- (plot_spacer() + heatmapClass@Plot$Col_dend +
## row Dendro and heatamp
heatmapClass@Plot$Row_dend + heatmapClass@Plot$Heatmap +
## setlayout
plot_layout(heights=c(1,5),                             widths=c(1,5),
nrow=2)) &
## remove padding
theme(plot.margin = unit(rep(0.01,4),"mm"))
load_all()
d <- test(y)
load_all()
d <- test(y)
d@Information$rowDendro = FALSE
z <- buildHeatmap(d)
z@Plot$Combo
d@Information$rowDendro = TRUE
d@Information$colDendro = FALSE
z <- buildHeatmap(d)
z@Plot$Combo
load_all()
d <- test(y)
load_all()
d <- test(y)
d@Plot$Combo
scale="row"
if (scale) {print("hi")}
if (scale) {print("hi")}
if (scale != FALSE) {print("hi")}
d <- test(y)
load_all()
load_all()
sides
load_all()
load_all()
load_all()
d <- test(y)
y
test
load_all()
ggheatmap(y)
z <- ggheatmap(y)
colorder(z)
load_all()
z <- ggheatmap(y)
colorder(z)
roworder(z)
load_all()
z <- ggheatmap(y)
z <- ggheatmap(y, Rowv = FALSE)
z@Plot$Heatmap
roworder(z)
rowOrder(z)
rownames(z@RawData)
load_all()
z <- ggheatmap(y, Rowv = FALSE)
load_all()
z <- ggheatmap(y, Rowv = FALSE)
z@Plot$Heatmap
z <- ggheatmap(y, scale = FALSE ,Rowv = FALSE)
y
load_all()
z <- ggheatmap(y, scale = FALSE ,Rowv = FALSE)
z@Plot$Heatmap
heatmapClass@Information$rowDendro
heatmapClass@Information
heatmapClass
z
if(1)
{print("hi")}
if(1+8)
if(1+8){print("hi")}
if(1+8){print("hi")}
if("hello"){print("hi")}
load_all()
load_all()
z <- ggheatmap(y, scale = FALSE ,Rowv = FALSE)
typeof(TRUE)
load_all()
load_all()
z <- ggheatmap(y, scale = FALSE ,Rowv = FALSE)
heatmapClass(RawData = y)
x <- heatmapClass(RawData = y)
x <- heatmapClass(RawData = y, Rowv = TRUE)
x <- heatmapClass(RawData = y, Rowv = FALSE)
x
load_all()
x <- heatmapClass(RawData = y, Rowv = FALSE)
z <- ggheatmap(y, scale = FALSE ,Rowv = FALSE)
z <- ggheatmap(y, scale = "col" ,Rowv = FALSE)
z <- ggheatmap(y, scale = "row" ,Rowv = FALSE)
z <- ggheatmap(y, scale = "row" ,Rowv = FALSE, Colv=FALSE)
load_all()
z <- ggheatmap(y, scale = "row" ,Rowv = FALSE, Colv=FALSE)
z <- ggheatmap(y, scale = "row")
load_all()
ggheatmap(y)
load_all()
z <- ggheatmap(y, scale = "row")
load_all()
z <- ggheatmap(y, scale = "row")
load_all()
z <- ggheatmap(y, scale = "row")
version("ggplot2")
ggplot2
load_all()
z <- ggheatmap(y, scale = "row")
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
